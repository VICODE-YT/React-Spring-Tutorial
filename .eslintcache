[{"E:\\Youtube\\01 React-Spring\\using-react-spring\\src\\index.js":"1","E:\\Youtube\\01 React-Spring\\using-react-spring\\src\\App.js":"2","E:\\Youtube\\01 React-Spring\\using-react-spring\\src\\02 Estructura\\Estructura.jsx":"3","E:\\Youtube\\01 React-Spring\\using-react-spring\\src\\03 Login\\Login.jsx":"4","E:\\Youtube\\01 React-Spring\\using-react-spring\\src\\04 useSprings\\Springs.jsx":"5","E:\\Youtube\\01 React-Spring\\using-react-spring\\src\\05 useTrail\\TrailTable.jsx":"6","E:\\Youtube\\01 React-Spring\\using-react-spring\\src\\05 useTrail\\Login.jsx":"7"},{"size":217,"mtime":1610676569078,"results":"8","hashOfConfig":"9"},{"size":837,"mtime":1610918900590,"results":"10","hashOfConfig":"9"},{"size":627,"mtime":1610511277482,"results":"11","hashOfConfig":"9"},{"size":2213,"mtime":1610597229008,"results":"12","hashOfConfig":"9"},{"size":2140,"mtime":1610759778295,"results":"13","hashOfConfig":"9"},{"size":2789,"mtime":1610919907618,"results":"14","hashOfConfig":"9"},{"size":2958,"mtime":1610919675738,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"6b7zxt",{"filePath":"19","messages":"20","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"18"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"18"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"18"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"E:\\Youtube\\01 React-Spring\\using-react-spring\\src\\index.js",[],["35","36"],"E:\\Youtube\\01 React-Spring\\using-react-spring\\src\\App.js",["37","38","39"],"import React, { useState } from \"react\";\nimport Estructura from \"./02 Estructura/Estructura\";\nimport Springs from \"./04 useSprings/Springs\";\nimport TrailTable from \"./05 useTrail/TrailTable\";\nimport Login from \"./05 useTrail/Login\";\n\n\nfunction App() {\n  const [move, setMove] = useState(false);\n\n  const clickHandler = () => {\n    setMove((lastState) => !lastState);\n  };\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        {/* <Estructura isMove={move} ></Estructura>\n\n       \n */}\n        <button className=\"button\" onClick={clickHandler}>\n          Click\n        </button>\n        {/* <Login></Login> */}\n\n        {/*  <Springs isMove={move}></Springs> */}\n        {/* <Trail></Trail> */}\n        <TrailTable></TrailTable>\n        <Login></Login>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","E:\\Youtube\\01 React-Spring\\using-react-spring\\src\\02 Estructura\\Estructura.jsx",["40"],"import React,{useState} from 'react';\r\nimport {useSpring,animated} from 'react-spring';\r\n\r\n\r\n/* \r\n1.- useSate\r\n2.- Array Deconstructing\r\n3.- Lift state up (delegar el re-render a un componente padre)\r\n\r\n*/\r\nexport default function Estructura({isMove,...props}) {\r\n\r\n  \r\n    const animationMove = useSpring({\r\n        transform:`translateX(${isMove?250:0}px)`,\r\n        \"backgroundColor\":`#${isMove?\"000\":\"FA0\"}`,\r\n        color:`#${!isMove?\"000\":\"FFF\"}`\r\n    })\r\n\r\n        \r\n\r\n    return (\r\n        <animated.div style={animationMove} className=\"componente-prueba\" >\r\n            Soy un DIV\r\n        </animated.div>\r\n    )\r\n}\r\n","E:\\Youtube\\01 React-Spring\\using-react-spring\\src\\03 Login\\Login.jsx",[],["41","42"],"E:\\Youtube\\01 React-Spring\\using-react-spring\\src\\04 useSprings\\Springs.jsx",["43"],"import React from 'react'\r\nimport {useSprings,animated} from 'react-spring';\r\n\r\n/* \r\n\r\nuseSprings(animationAmount,arrayDataForAnimation)\r\n1.-AnimationObjects amount\r\n2.-Data of the AnimationObjects.\r\nWill create as much AnimationObjects as the amount given.\r\nIf 1 is larger than 2, there will be empty AnimationObjects\r\nIf 2 is larger than 1, there will be only the 1 amount established.\r\nIf 1 is and object then the iteration creation will count only 1 element\r\n\r\n2-> dataSet.map( item => ({ opacity: 0.5, transform: scale(1.1),...}) )\r\n\r\n\r\n*/\r\n\r\nexport default function Springs({isMove,...props}) {\r\n    const dataToShow = \r\n    [\"lore\",\"impsu\",\"dolo\",\"sit\",\r\n    \"amet\",\"consectetur\",\"adipis\",\"Neque\",\r\n    \"porro\",\"quisquam\",\"dolo\",\"est\"\r\n    ];\r\n   \r\n\r\n\r\n/*     const appearAnimations = useSprings(dataToShow.length,\r\n        dataToShow.map(\r\n            (item,index,arrayItSelf) => {\r\n\r\n\r\n                return {\r\n                    from:{\r\n                        \r\n                        transform: `translateX(${index%2 ?120:-120}%)`\r\n                    },\r\n                    \r\n                    transform: `translateX(0)`,\r\n                   reverse:!isMove \r\n\r\n                }\r\n\r\n            }\r\n        )    \r\n    )\r\n */\r\n    const [appearAnimations,setAppearAnimations,stopAppearAnimations] = useSprings(dataToShow.length,\r\n        \r\n        index=>(\r\n            {        \r\n                /* opacity: index%2 ? 0 : 1, */\r\n                transform: `translateX(${index%2 ?120:-120}%)`,            \r\n            }\r\n        \r\n        )\r\n    )\r\n\r\n    setAppearAnimations((index) =>(\r\n        {\r\n            transform: isMove?`translateX(0)`:`translateX(${index%2 ?120:-120}%)`,\r\n        }\r\n    ))       \r\n\r\n    return (\r\n        <div className=\"list-container\">\r\n\r\n            <ul className=\"list-items\">\r\n                {/* O iterar sobre el array de animaciones */\r\n                dataToShow&&dataToShow.map((item,index,arrayItSelf) =>\r\n                    <animated.li key={index} style={appearAnimations[index]} >{item}</animated.li>\r\n                )}\r\n            </ul>        \r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n","E:\\Youtube\\01 React-Spring\\using-react-spring\\src\\05 useTrail\\TrailTable.jsx",[],"E:\\Youtube\\01 React-Spring\\using-react-spring\\src\\05 useTrail\\Login.jsx",[],{"ruleId":"44","replacedBy":"45"},{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","severity":1,"message":"49","line":2,"column":8,"nodeType":"50","messageId":"51","endLine":2,"endColumn":18},{"ruleId":"48","severity":1,"message":"52","line":3,"column":8,"nodeType":"50","messageId":"51","endLine":3,"endColumn":15},{"ruleId":"48","severity":1,"message":"53","line":9,"column":10,"nodeType":"50","messageId":"51","endLine":9,"endColumn":14},{"ruleId":"48","severity":1,"message":"54","line":1,"column":15,"nodeType":"50","messageId":"51","endLine":1,"endColumn":23},{"ruleId":"44","replacedBy":"55"},{"ruleId":"46","replacedBy":"56"},{"ruleId":"48","severity":1,"message":"57","line":48,"column":49,"nodeType":"50","messageId":"51","endLine":48,"endColumn":69},"no-native-reassign",["58"],"no-negated-in-lhs",["59"],"no-unused-vars","'Estructura' is defined but never used.","Identifier","unusedVar","'Springs' is defined but never used.","'move' is assigned a value but never used.","'useState' is defined but never used.",["58"],["59"],"'stopAppearAnimations' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]